import numpy as np
import matplotlib.pyplot as plt
import fcwt

def chirp_frequency(t, f0=17000, f1=7000, N=7.5, T=1, A=None):
    """
    Функция для вычисления частоты чирп-сигнала в зависимости от времени.
    
    Параметры:
    t  -- время (в секундах), может быть как скаляр, так и массив значений
    f0 -- начальная частота (Гц)
    f1 -- конечная частота (Гц)
    N  -- количество периодов изменения частоты
    T  -- общая длительность сигнала (секунды)
    A  -- амплитуда синусоидального изменения частоты (Гц). Если None, рассчитывается как (f0 - f1) / 2.
    
    Возвращает:
    Частота f(t) в зависимости от времени t
    """
    f_sr = (f0 + f1) / 2
    if A is None:
        A = (f0 - f1) / 2
    f_t = f_sr + A * np.sin(2 * np.pi * N * t / T)
    return f_t

def generate_chirp_signal(t, f0=17000, f1=7000, N=7.5, T=1, A=None):
    """
    Генерация чирп-сигнала на основе изменения фазы.
    
    Параметры:
    t  -- время (в секундах), массив значений
    f0 -- начальная частота (Гц)
    f1 -- конечная частота (Гц)
    N  -- количество периодов изменения частоты
    T  -- общая длительность сигнала (секунды)
    A  -- амплитуда синусоидального изменения частоты (Гц). Если None, рассчитывается как (f0 - f1) / 2.
    
    Возвращает:
    Временной сигнал (чирп-сигнал) с фазовой модуляцией
    """
    f_t = chirp_frequency(t, f0, f1, N, T, A)
    # Интеграция частоты для получения фазы
    phase = 2 * np.pi * np.cumsum(f_t) / len(t)
    signal = np.sin(phase)
    return signal

# Параметры
fs = 1e6  # Частота дискретизации, Гц
T = 0.0163  # Длительность сигнала, секунда
t = np.arange(0, T, 1/fs)  # Временная ось
f0 = 7000   # Начальная частота, Гц
f1 = 17000  # Конечная частота, Гц
fn = 200    # Количество частотных бинов для вейвлет-преобразования

# Генерация чирп-сигнала с фазовой модуляцией
signal = generate_chirp_signal(t, f0, f1, A=0.25)

# Применение CWT
freqs, cwt_matrix = fcwt.cwt(signal, int(fs), f0, f1, fn)

# Визуализация
plt.figure(figsize=(12, 12))

# Визуализация чирп-сигнала
plt.subplot(3, 1, 1)
plt.plot(t, signal)
plt.title("Чирп-сигнал")
plt.xlabel("Время (с)")
plt.ylabel("Амплитуда")
plt.grid(True)

# Визуализация спектра с помощью CWT
plt.subplot(3, 1, 2)
plt.imshow(np.abs(cwt_matrix), aspect='auto', extent=[0, T, freqs[0], freqs[-1]], cmap='jet', origin='lower')
plt.title("Спектр сигнала (CWT)")
plt.xlabel("Время (с)")
plt.ylabel("Частота (Гц)")
plt.colorbar(label='Амплитуда')
plt.grid(True)

plt.tight_layout()
plt.show()
